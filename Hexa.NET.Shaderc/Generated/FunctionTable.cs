// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;

namespace Hexa.NET.Shaderc
{
	public unsafe partial class Shaderc
	{
		internal static FunctionTable funcTable;

		/// <summary>
		/// Initializes the function table, automatically called. Do not call manually, only after <see cref="FreeApi"/>.
		/// </summary>
		public static void InitApi()
		{
			funcTable = new FunctionTable(LibraryLoader.LoadLibrary(GetLibraryName, null), 44);
			funcTable.Load(0, "shaderc_compiler_initialize");
			funcTable.Load(1, "shaderc_compiler_release");
			funcTable.Load(2, "shaderc_compile_options_initialize");
			funcTable.Load(3, "shaderc_compile_options_clone");
			funcTable.Load(4, "shaderc_compile_options_release");
			funcTable.Load(5, "shaderc_compile_options_add_macro_definition");
			funcTable.Load(6, "shaderc_compile_options_set_source_language");
			funcTable.Load(7, "shaderc_compile_options_set_generate_debug_info");
			funcTable.Load(8, "shaderc_compile_options_set_optimization_level");
			funcTable.Load(9, "shaderc_compile_options_set_forced_version_profile");
			funcTable.Load(10, "shaderc_compile_options_set_include_callbacks");
			funcTable.Load(11, "shaderc_compile_options_set_suppress_warnings");
			funcTable.Load(12, "shaderc_compile_options_set_target_env");
			funcTable.Load(13, "shaderc_compile_options_set_target_spirv");
			funcTable.Load(14, "shaderc_compile_options_set_warnings_as_errors");
			funcTable.Load(15, "shaderc_compile_options_set_limit");
			funcTable.Load(16, "shaderc_compile_options_set_auto_bind_uniforms");
			funcTable.Load(17, "shaderc_compile_options_set_auto_combined_image_sampler");
			funcTable.Load(18, "shaderc_compile_options_set_hlsl_io_mapping");
			funcTable.Load(19, "shaderc_compile_options_set_hlsl_offsets");
			funcTable.Load(20, "shaderc_compile_options_set_binding_base");
			funcTable.Load(21, "shaderc_compile_options_set_binding_base_for_stage");
			funcTable.Load(22, "shaderc_compile_options_set_preserve_bindings");
			funcTable.Load(23, "shaderc_compile_options_set_auto_map_locations");
			funcTable.Load(24, "shaderc_compile_options_set_hlsl_register_set_and_binding_for_stage");
			funcTable.Load(25, "shaderc_compile_options_set_hlsl_register_set_and_binding");
			funcTable.Load(26, "shaderc_compile_options_set_hlsl_functionality1");
			funcTable.Load(27, "shaderc_compile_options_set_hlsl_16bit_types");
			funcTable.Load(28, "shaderc_compile_options_set_vulkan_rules_relaxed");
			funcTable.Load(29, "shaderc_compile_options_set_invert_y");
			funcTable.Load(30, "shaderc_compile_options_set_nan_clamp");
			funcTable.Load(31, "shaderc_compile_into_spv");
			funcTable.Load(32, "shaderc_compile_into_spv_assembly");
			funcTable.Load(33, "shaderc_compile_into_preprocessed_text");
			funcTable.Load(34, "shaderc_assemble_into_spv");
			funcTable.Load(35, "shaderc_result_release");
			funcTable.Load(36, "shaderc_result_get_length");
			funcTable.Load(37, "shaderc_result_get_num_warnings");
			funcTable.Load(38, "shaderc_result_get_num_errors");
			funcTable.Load(39, "shaderc_result_get_compilation_status");
			funcTable.Load(40, "shaderc_result_get_bytes");
			funcTable.Load(41, "shaderc_result_get_error_message");
			funcTable.Load(42, "shaderc_get_spv_version");
			funcTable.Load(43, "shaderc_parse_version_profile");
		}

		public static void FreeApi()
		{
			funcTable.Free();
		}
	}
}
